//
// Mixins
// --------------------------------------------------


// Clearfix
@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// Center-align a block level element
@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Responsive image
// Keep images from scaling beyond the width of their parents.
@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%; // Part 1: Set a maximum relative to the parent
  height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}

// Reset default list styles
@mixin list-reset() {
  margin: 0;
  padding: 0;
  list-style: none;
  > dt,
  > dd {
    margin-left: 0;
  }
}

// Turns list items into inline-block
@mixin list-inline($pad-left: 5px, $pad-right: 5px) {
  @include list-reset;
  > li,
  > dt,
  > dd {
    display: inline-block;
    padding-left: $pad-left;
    padding-right: $pad-right;
  }
}

// Fade links
@mixin fade($hover-opacity: .75, $transition-duration: .3s) {
  opacity: 1;
  @include transition(opacity $transition-duration);
  &:hover,
  &:focus {
    opacity: $hover-opacity;
  }
}

// Btn hover
@mixin btn-hover($color, $bg-color) {
  color: $color;
  background-color: $bg-color;
  text-decoration: none;
}

// Sizing shortcuts
@mixin size($width, $height) {
  width: $width;
  height: $height;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`
@mixin backface-visibility($visibility){
  -webkit-backface-visibility: $visibility;
     -moz-backface-visibility: $visibility;
          backface-visibility: $visibility;
}

// Transformations
@mixin scale($ratio...) {
  -webkit-transform: scale($ratio);
      -ms-transform: scale($ratio); // IE9 only
       -o-transform: scale($ratio);
          transform: scale($ratio);
}

@mixin scaleX($ratio) {
  -webkit-transform: scaleX($ratio);
      -ms-transform: scaleX($ratio); // IE9 only
       -o-transform: scaleX($ratio);
          transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
  -webkit-transform: scaleY($ratio);
      -ms-transform: scaleY($ratio); // IE9 only
       -o-transform: scaleY($ratio);
          transform: scaleY($ratio);
}
@mixin skew($x, $y) {
  -webkit-transform: skewX($x) skewY($y);
      -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
       -o-transform: skewX($x) skewY($y);
          transform: skewX($x) skewY($y);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
      -ms-transform: translate($x, $y); // IE9 only
       -o-transform: translate($x, $y);
          transform: translate($x, $y);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
          transform: translate3d($x, $y, $z);
}
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees); // IE9 only
       -o-transform: rotate($degrees);
          transform: rotate($degrees);
}
@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
      -ms-transform: rotateX($degrees); // IE9 only
       -o-transform: rotateX($degrees);
          transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
      -ms-transform: rotateY($degrees); // IE9 only
       -o-transform: rotateY($degrees);
          transform: rotateY($degrees);
}
@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
     -moz-perspective: $perspective;
          perspective: $perspective;
}
@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
     -moz-perspective-origin: $perspective;
          perspective-origin: $perspective;
}
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
     -moz-transform-origin: $origin;
      -ms-transform-origin: $origin; // IE9 only
          transform-origin: $origin;
}

// Transitions
@mixin transition($transition...) {
  -webkit-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}
@mixin transition-property($transition-property...) {
  -webkit-transition-property: $transition-property;
          transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
          transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration...) {
  -webkit-transition-duration: $transition-duration;
          transition-duration: $transition-duration;
}
@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
          transition-timing-function: $timing-function;
}
@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
     -moz-transition: -moz-transform $transition;
       -o-transition: -o-transform $transition;
          transition: transform $transition;
}

// Rgba background with fallback for old browsers
@mixin rgba-bg($hex, $rgba-r, $rgba-g, $rgba-b, $rgba-a) {
  background-color: $hex; // fallback
  background-color: rgba($rgba-r, $rgba-g, $rgba-b, $rgba-a);
}

// Positioner
@mixin positioner($width, $height, $v-property, $v-value, $h-property, $h-value) {
  position: absolute;
  width: $width;
  height: $height;
  #{$v-property}: ($v-value);
  #{$h-property}: ($h-value);
}

// Positioner for vertical centering
@mixin positioner-v($width: auto, $height: auto) {
  position: absolute;
  width: $width;
  height: $height;
  top: 50%;
  margin-top: -($height/2);
}

// Splitter
@mixin splitter($content: '|', $pad-h: $space-byte, $font-weight: 400, $color: $brand-secondary-light) {
  content: $content;
  padding-left: $pad-h;
  padding-right: $pad-h;
  font-weight: $font-weight;
  color: $color;
  @media #{$medium-up} {
    padding-left: floor($pad-h * 2);
    padding-right: floor($pad-h * 2);
  }
  @media #{$large-up} {
    padding-left: floor($pad-h * 3);
    padding-right: floor($pad-h * 3);
  }
}

// WebKit-style focus
@mixin tab-focus() {
  // Default
  outline: thin dotted;
  // WebKit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Visibility
@mixin show() {
  display: block !important;
}

@mixin hidden() {
  display: none !important;
  visibility: hidden !important;
}

//
// Responsive vertical spacer
//
// Spacing configuration for padding visual consistency,
// for small, medium and large devices.
//
@mixin spacer-v($pad: $space-zeta-byte) {
  padding-top: $pad;
  padding-bottom: $pad;
  @media #{$medium-up} {
    padding-top: floor($pad * 1.5);
    padding-bottom: floor($pad * 1.5);
  }
  @media #{$large-up} {
    padding-top: floor($pad * 2);
    padding-bottom: floor($pad * 2);
  }
}

@mixin spacer-v-top($pad: $space-zeta-byte) {
  padding-top: $pad;
  @media #{$medium-up} {
    padding-top: floor($pad * 1.5);
  }
  @media #{$large-up} {
    padding-top: floor($pad * 2);
  }
}
